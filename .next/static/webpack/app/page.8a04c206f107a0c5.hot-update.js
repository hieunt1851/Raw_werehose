"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./services/roboflow.ts":
/*!******************************!*\
  !*** ./services/roboflow.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RoboflowService: function() { return /* binding */ RoboflowService; }\n/* harmony export */ });\nconst ROBOFLOW_API_KEY = \"uYUCzsUbWxWRrO15iar5\";\nconst ROBOFLOW_MODEL_URL = \"http://171.244.46.137:9001/raw-meat/1\";\nclass RoboflowService {\n    static async predictMaterial(imageUrl) {\n        try {\n            const response = await fetch(\"\".concat(ROBOFLOW_MODEL_URL, \"?api_key=\").concat(ROBOFLOW_API_KEY, \"&image=\").concat(encodeURIComponent(imageUrl)), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (!response.ok) {\n                throw new Error(\"HTTP error! status: \".concat(response.status));\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"Roboflow API error:\", error);\n            return {\n                error: error instanceof Error ? error.message : \"Unknown error occurred\"\n            };\n        }\n    }\n    static async predictMaterialFromBase64(base64Image) {\n        try {\n            // If base64Image is a URL, use the URL-based prediction\n            if (base64Image.startsWith(\"http://\") || base64Image.startsWith(\"https://\")) {\n                console.log(\"URL-based prediction\");\n                console.log(base64Image);\n                return await this.predictMaterial(base64Image);\n            }\n            // Extract only the base64 part if it's a data URL\n            let base64 = base64Image;\n            console.log(base64);\n            if (base64.startsWith(\"data:\")) {\n                base64 = base64.split(\",\")[1];\n            }\n            const response = await fetch(\"\".concat(ROBOFLOW_MODEL_URL, \"?api_key=\").concat(ROBOFLOW_API_KEY), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                },\n                body: base64\n            });\n            if (!response.ok) {\n                throw new Error(\"HTTP error! status: \".concat(response.status));\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"Roboflow API error:\", error);\n            return {\n                error: error instanceof Error ? error.message : \"Unknown error occurred\"\n            };\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL3JvYm9mbG93LnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxtQkFBbUI7QUFDekIsTUFBTUMscUJBQXFCO0FBa0JwQixNQUFNQztJQUNYLGFBQWFDLGdCQUFnQkMsUUFBZ0IsRUFBK0M7UUFDMUYsSUFBSTtZQUNGLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSxHQUFpQ04sT0FBOUJDLG9CQUFtQixhQUFxQ00sT0FBMUJQLGtCQUFpQixXQUFzQyxPQUE3Qk8sbUJBQW1CSCxZQUFhO2dCQUN0SEksUUFBUTtnQkFDUkMsU0FBUztvQkFDUCxnQkFBZ0I7Z0JBQ2xCO1lBQ0Y7WUFFQSxJQUFJLENBQUNKLFNBQVNLLEVBQUUsRUFBRTtnQkFDaEIsTUFBTSxJQUFJQyxNQUFNLHVCQUF1QyxPQUFoQk4sU0FBU08sTUFBTTtZQUN4RDtZQUVBLE1BQU1DLE9BQU8sTUFBTVIsU0FBU1MsSUFBSTtZQUNoQyxPQUFPRDtRQUNULEVBQUUsT0FBT0UsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsdUJBQXVCQTtZQUNyQyxPQUFPO2dCQUNMQSxPQUFPQSxpQkFBaUJKLFFBQVFJLE1BQU1FLE9BQU8sR0FBRztZQUNsRDtRQUNGO0lBQ0Y7SUFFQSxhQUFhQywwQkFBMEJDLFdBQW1CLEVBQStDO1FBQ3ZHLElBQUk7WUFDRix3REFBd0Q7WUFDeEQsSUFBSUEsWUFBWUMsVUFBVSxDQUFDLGNBQWNELFlBQVlDLFVBQVUsQ0FBQyxhQUFhO2dCQUMzRUosUUFBUUssR0FBRyxDQUFDO2dCQUNaTCxRQUFRSyxHQUFHLENBQUNGO2dCQUNaLE9BQU8sTUFBTSxJQUFJLENBQUNoQixlQUFlLENBQUNnQjtZQUNwQztZQUNBLGtEQUFrRDtZQUNsRCxJQUFJRyxTQUFTSDtZQUNiSCxRQUFRSyxHQUFHLENBQUNDO1lBQ1osSUFBSUEsT0FBT0YsVUFBVSxDQUFDLFVBQVU7Z0JBQzlCRSxTQUFTQSxPQUFPQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDL0I7WUFDQSxNQUFNbEIsV0FBVyxNQUFNQyxNQUFNLEdBQWlDTixPQUE5QkMsb0JBQW1CLGFBQTRCLE9BQWpCRCxtQkFBb0I7Z0JBQ2hGUSxRQUFRO2dCQUNSQyxTQUFTO29CQUNQLGdCQUFnQjtnQkFDbEI7Z0JBQ0FlLE1BQU1GO1lBQ1I7WUFFQSxJQUFJLENBQUNqQixTQUFTSyxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTSx1QkFBdUMsT0FBaEJOLFNBQVNPLE1BQU07WUFDeEQ7WUFFQSxNQUFNQyxPQUFPLE1BQU1SLFNBQVNTLElBQUk7WUFDaEMsT0FBT0Q7UUFDVCxFQUFFLE9BQU9FLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHVCQUF1QkE7WUFDckMsT0FBTztnQkFDTEEsT0FBT0EsaUJBQWlCSixRQUFRSSxNQUFNRSxPQUFPLEdBQUc7WUFDbEQ7UUFDRjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2VydmljZXMvcm9ib2Zsb3cudHM/MTcxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBST0JPRkxPV19BUElfS0VZID0gJ3VZVUN6c1ViV3hXUnJPMTVpYXI1JztcbmNvbnN0IFJPQk9GTE9XX01PREVMX1VSTCA9ICdodHRwOi8vMTcxLjI0NC40Ni4xMzc6OTAwMS9yYXctbWVhdC8xJztcblxuZXhwb3J0IGludGVyZmFjZSBSb2JvZmxvd1ByZWRpY3Rpb24ge1xuICBwcmVkaWN0aW9uczogQXJyYXk8e1xuICAgIGNsYXNzOiBzdHJpbmc7XG4gICAgY29uZmlkZW5jZTogbnVtYmVyO1xuICAgIHg6IG51bWJlcjtcbiAgICB5OiBudW1iZXI7XG4gICAgd2lkdGg6IG51bWJlcjtcbiAgICBoZWlnaHQ6IG51bWJlcjtcbiAgfT47XG4gIHRpbWU6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSb2JvZmxvd0Vycm9yIHtcbiAgZXJyb3I6IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIFJvYm9mbG93U2VydmljZSB7XG4gIHN0YXRpYyBhc3luYyBwcmVkaWN0TWF0ZXJpYWwoaW1hZ2VVcmw6IHN0cmluZyk6IFByb21pc2U8Um9ib2Zsb3dQcmVkaWN0aW9uIHwgUm9ib2Zsb3dFcnJvcj4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke1JPQk9GTE9XX01PREVMX1VSTH0/YXBpX2tleT0ke1JPQk9GTE9XX0FQSV9LRVl9JmltYWdlPSR7ZW5jb2RlVVJJQ29tcG9uZW50KGltYWdlVXJsKX1gLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdSb2JvZmxvdyBBUEkgZXJyb3I6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3Igb2NjdXJyZWQnXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBhc3luYyBwcmVkaWN0TWF0ZXJpYWxGcm9tQmFzZTY0KGJhc2U2NEltYWdlOiBzdHJpbmcpOiBQcm9taXNlPFJvYm9mbG93UHJlZGljdGlvbiB8IFJvYm9mbG93RXJyb3I+IHtcbiAgICB0cnkge1xuICAgICAgLy8gSWYgYmFzZTY0SW1hZ2UgaXMgYSBVUkwsIHVzZSB0aGUgVVJMLWJhc2VkIHByZWRpY3Rpb25cbiAgICAgIGlmIChiYXNlNjRJbWFnZS5zdGFydHNXaXRoKCdodHRwOi8vJykgfHwgYmFzZTY0SW1hZ2Uuc3RhcnRzV2l0aCgnaHR0cHM6Ly8nKSkge1xuICAgICAgICBjb25zb2xlLmxvZygnVVJMLWJhc2VkIHByZWRpY3Rpb24nKTtcbiAgICAgICAgY29uc29sZS5sb2coYmFzZTY0SW1hZ2UpO1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5wcmVkaWN0TWF0ZXJpYWwoYmFzZTY0SW1hZ2UpO1xuICAgICAgfVxuICAgICAgLy8gRXh0cmFjdCBvbmx5IHRoZSBiYXNlNjQgcGFydCBpZiBpdCdzIGEgZGF0YSBVUkxcbiAgICAgIGxldCBiYXNlNjQgPSBiYXNlNjRJbWFnZTtcbiAgICAgIGNvbnNvbGUubG9nKGJhc2U2NCk7XG4gICAgICBpZiAoYmFzZTY0LnN0YXJ0c1dpdGgoJ2RhdGE6JykpIHtcbiAgICAgICAgYmFzZTY0ID0gYmFzZTY0LnNwbGl0KCcsJylbMV07XG4gICAgICB9XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke1JPQk9GTE9XX01PREVMX1VSTH0/YXBpX2tleT0ke1JPQk9GTE9XX0FQSV9LRVl9YCwge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyxcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogYmFzZTY0XG4gICAgICB9KTtcblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIHN0YXR1czogJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICByZXR1cm4gZGF0YVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdSb2JvZmxvdyBBUEkgZXJyb3I6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3Igb2NjdXJyZWQnXG4gICAgICB9O1xuICAgIH1cbiAgfVxufSJdLCJuYW1lcyI6WyJST0JPRkxPV19BUElfS0VZIiwiUk9CT0ZMT1dfTU9ERUxfVVJMIiwiUm9ib2Zsb3dTZXJ2aWNlIiwicHJlZGljdE1hdGVyaWFsIiwiaW1hZ2VVcmwiLCJyZXNwb25zZSIsImZldGNoIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwibWV0aG9kIiwiaGVhZGVycyIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJkYXRhIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsIm1lc3NhZ2UiLCJwcmVkaWN0TWF0ZXJpYWxGcm9tQmFzZTY0IiwiYmFzZTY0SW1hZ2UiLCJzdGFydHNXaXRoIiwibG9nIiwiYmFzZTY0Iiwic3BsaXQiLCJib2R5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/roboflow.ts\n"));

/***/ })

});